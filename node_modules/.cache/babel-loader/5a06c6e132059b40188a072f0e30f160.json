{"ast":null,"code":"var _jsxFileName = \"D:\\\\react\\\\reactsobre\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport { ActivityIndicator, FlatList, Text, View, StyleSheet, TouchableOpacity } from 'react-native';\nimport Flex from \"react-native\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      isLoading: true\n    };\n  }\n\n  async getMovies() {\n    try {\n      const response = await fetch('https://reactnative.dev/movies.json');\n      const json = await response.json();\n      this.setState({\n        data: json.movies\n      });\n    } catch (error) {\n      console.log(error);\n    } finally {\n      this.setState({\n        isLoading: false\n      });\n    }\n  }\n\n  componentDidMount() {\n    this.getMovies();\n  }\n\n  render() {\n    const {\n      data,\n      isLoading\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(View, {\n      style: {\n        flex: 1,\n        padding: 24\n      },\n      children: isLoading ? /*#__PURE__*/_jsxDEV(ActivityIndicator, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 22\n      }, this) : /*#__PURE__*/_jsxDEV(FlatList, {\n        data: data,\n        keyExtractor: ({\n          id\n        }, index) => id,\n        renderItem: ({\n          item\n        }) => /*#__PURE__*/_jsxDEV(Text, {\n          children: [item.title, \", \", item.releaseYear]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this);\n    const styles = StyleSheet.create({\n      container: {\n        flex: 1,\n        padding: 20\n      }\n    });\n  }\n\n}\n;","map":{"version":3,"sources":["D:/react/reactsobre/src/App.js"],"names":["React","Component","ActivityIndicator","FlatList","Text","View","StyleSheet","TouchableOpacity","Flex","App","constructor","props","state","data","isLoading","getMovies","response","fetch","json","setState","movies","error","console","log","componentDidMount","render","flex","padding","id","index","item","title","releaseYear","styles","create","container"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,iBAAT,EAA4BC,QAA5B,EAAsCC,IAAtC,EAA4CC,IAA5C,EAAkDC,UAAlD,EAA8DC,gBAA9D,QAAsF,cAAtF;AACA,OAAOC,IAAP,MAAiB,cAAjB;;AAGA,eAAe,MAAMC,GAAN,SAAkBR,SAAlB,CAA4B;AACzCS,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE,EADK;AAEXC,MAAAA,SAAS,EAAE;AAFA,KAAb;AAID;;AAEc,QAATC,SAAS,GAAG;AAChB,QAAI;AACF,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,qCAAD,CAA5B;AACA,YAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACE,IAAT,EAAnB;AACA,WAAKC,QAAL,CAAc;AAAEN,QAAAA,IAAI,EAAEK,IAAI,CAACE;AAAb,OAAd;AACD,KAJD,CAIE,OAAOC,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,KAND,SAMU;AACR,WAAKF,QAAL,CAAc;AAAEL,QAAAA,SAAS,EAAE;AAAb,OAAd;AACD;AACF;;AAEDU,EAAAA,iBAAiB,GAAG;AAClB,SAAKT,SAAL;AACD;;AAEDU,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEZ,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAsB,KAAKF,KAAjC;AAEA,wBACE,QAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAAEc,QAAAA,IAAI,EAAE,CAAR;AAAWC,QAAAA,OAAO,EAAE;AAApB,OAAb;AAAA,gBACGb,SAAS,gBAAG,QAAC,iBAAD;AAAA;AAAA;AAAA;AAAA,cAAH,gBACR,QAAC,QAAD;AACE,QAAA,IAAI,EAAED,IADR;AAEE,QAAA,YAAY,EAAE,CAAC;AAAEe,UAAAA;AAAF,SAAD,EAASC,KAAT,KAAmBD,EAFnC;AAGE,QAAA,UAAU,EAAE,CAAC;AAAEE,UAAAA;AAAF,SAAD,kBACV,QAAC,IAAD;AAAA,qBAAOA,IAAI,CAACC,KAAZ,QAAqBD,IAAI,CAACE,WAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,YADF;AAaJ,UAAMC,MAAM,GAAG3B,UAAU,CAAC4B,MAAX,CAAkB;AAC/BC,MAAAA,SAAS,EAAE;AACTT,QAAAA,IAAI,EAAE,CADG;AAETC,QAAAA,OAAO,EAAE;AAFA;AADoB,KAAlB,CAAf;AAMG;;AAhDwC;AAmD1C","sourcesContent":["import React, { Component } from 'react';\nimport { ActivityIndicator, FlatList, Text, View, StyleSheet, TouchableOpacity } from 'react-native';\nimport Flex from \"react-native\";\n\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      data: [],\n      isLoading: true\n    };\n  }\n\n  async getMovies() {\n    try {\n      const response = await fetch('https://reactnative.dev/movies.json');\n      const json = await response.json();\n      this.setState({ data: json.movies });\n    } catch (error) {\n      console.log(error);\n    } finally {\n      this.setState({ isLoading: false });\n    }\n  }\n\n  componentDidMount() {\n    this.getMovies();\n  }\n\n  render() {\n    const { data, isLoading } = this.state;\n\n    return (\n      <View style={{ flex: 1, padding: 24 }}>\n        {isLoading ? <ActivityIndicator/> : (\n          <FlatList\n            data={data}\n            keyExtractor={({ id }, index) => id}\n            renderItem={({ item }) => (\n              <Text>{item.title}, {item.releaseYear}</Text>\n            )}\n          />\n        )}\n      </View>\n    );\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 20,\n  },\n});\n  }\n\n  \n};"]},"metadata":{},"sourceType":"module"}