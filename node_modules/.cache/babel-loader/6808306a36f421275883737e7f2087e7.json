{"ast":null,"code":"var _jsxFileName = \"D:\\\\react\\\\reactsobre\\\\src\\\\App.js\";\nimport React from 'react';\nimport { View, StyleSheet, TouchableOpacity, Text } from 'react-native';\nimport { Formik } from 'formik';\nimport TextInput from '../../components/TextInput';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ExampleForm({\n  onSubmit,\n  initialValues,\n  style\n}) {\n  const renderForm = ({\n    values,\n    setFieldValue,\n    setFieldTouched,\n    touched,\n    errors,\n    handleSubmit,\n    isValid,\n    isSubmitting\n  }) => {\n    return /*#__PURE__*/_jsxDEV(View, {\n      style: StyleSheet.flatten([styles.container, style]),\n      children: [/*#__PURE__*/_jsxDEV(TextInput, {\n        onChange: setFieldValue,\n        onTouch: setFieldTouched,\n        placeholder: \"Nome\",\n        name: \"name\",\n        value: values.name,\n        error: touched.name && errors.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextInput, {\n        onChange: setFieldValue,\n        onTouch: setFieldTouched,\n        keyboardType: \"email-address\",\n        autoCapitalize: \"none\",\n        placeholder: \"E-mail\",\n        name: \"email\",\n        value: values.email,\n        error: touched.email && errors.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextInput, {\n        onChange: setFieldValue,\n        onTouch: setFieldTouched,\n        placeholder: \"Senha\",\n        name: \"password\",\n        secureTextEntry: true,\n        value: values.senha,\n        error: touched.password && errors.password\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextInput, {\n        onChange: setFieldValue,\n        onTouch: setFieldTouched,\n        placeholder: \"Confirmar senha\",\n        name: \"passwordConfirm\",\n        secureTextEntry: true,\n        value: values.passwordConfirm,\n        error: touched.passwordConfirm && errors.passwordConfirm\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TouchableOpacity, {\n        disabled: !isValid || isSubmitting,\n        onPress: handleSubmit,\n        style: StyleSheet.flatten([styles.submit, !isValid ? styles.submitDisabled : null]),\n        children: /*#__PURE__*/_jsxDEV(Text, {\n          style: styles.submitText,\n          children: \"Enviar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: initialValues,\n    onSubmit: onSubmit,\n    render: renderForm\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n\n_c = ExampleForm;\nExampleForm.defaultProps = {\n  initialValues: {},\n  onSubmit: () => null\n};\nconst styles = StyleSheet.create({\n  container: {},\n  submit: {\n    height: 50,\n    backgroundColor: '#f2b50c',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginHorizontal: 6\n  },\n  submitText: {\n    fontSize: 16,\n    fontWeight: 'bold'\n  },\n  submitDisabled: {\n    backgroundColor: '#d1cfcf'\n  }\n});\nexport default ExampleForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExampleForm\");","map":{"version":3,"sources":["D:/react/reactsobre/src/App.js"],"names":["React","View","StyleSheet","TouchableOpacity","Text","Formik","TextInput","ExampleForm","onSubmit","initialValues","style","renderForm","values","setFieldValue","setFieldTouched","touched","errors","handleSubmit","isValid","isSubmitting","flatten","styles","container","name","email","senha","password","passwordConfirm","submit","submitDisabled","submitText","defaultProps","create","height","backgroundColor","justifyContent","alignItems","marginHorizontal","fontSize","fontWeight"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {View, StyleSheet, TouchableOpacity, Text} from 'react-native';\nimport {Formik} from 'formik';\nimport TextInput from '../../components/TextInput';\n\nfunction ExampleForm({onSubmit, initialValues, style}) {\n  const renderForm = ({\n    values,\n    setFieldValue,\n    setFieldTouched,\n    touched,\n    errors,\n    handleSubmit,\n    isValid,\n    isSubmitting,\n  }) => {\n    return (\n      <View style={StyleSheet.flatten([styles.container, style])}>\n        <TextInput\n          onChange={setFieldValue}\n          onTouch={setFieldTouched}\n          placeholder=\"Nome\"\n          name=\"name\"\n          value={values.name}\n          error={touched.name && errors.name}\n        />\n        <TextInput\n          onChange={setFieldValue}\n          onTouch={setFieldTouched}\n          keyboardType=\"email-address\"\n          autoCapitalize=\"none\"\n          placeholder=\"E-mail\"\n          name=\"email\"\n          value={values.email}\n          error={touched.email && errors.email}\n        />\n        <TextInput\n          onChange={setFieldValue}\n          onTouch={setFieldTouched}\n          placeholder=\"Senha\"\n          name=\"password\"\n          secureTextEntry={true}\n          value={values.senha}\n          error={touched.password && errors.password}\n        />\n        <TextInput\n          onChange={setFieldValue}\n          onTouch={setFieldTouched}\n          placeholder=\"Confirmar senha\"\n          name=\"passwordConfirm\"\n          secureTextEntry={true}\n          value={values.passwordConfirm}\n          error={touched.passwordConfirm && errors.passwordConfirm}\n        />\n        <TouchableOpacity\n          disabled={!isValid || isSubmitting}\n          onPress={handleSubmit}\n          style={StyleSheet.flatten([\n            styles.submit,\n            !isValid ? styles.submitDisabled : null,\n          ])}>\n          <Text style={styles.submitText}>Enviar</Text>\n        </TouchableOpacity>\n      </View>\n    );\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      onSubmit={onSubmit}\n      render={renderForm}\n    />\n  );\n}\n\nExampleForm.defaultProps = {\n  initialValues: {},\n  onSubmit: () => null,\n};\n\nconst styles = StyleSheet.create({\n  container: {},\n  submit: {\n    height: 50,\n    backgroundColor: '#f2b50c',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginHorizontal: 6,\n  },\n  submitText: {\n    fontSize: 16,\n    fontWeight: 'bold',\n  },\n  submitDisabled: {\n    backgroundColor: '#d1cfcf',\n  },\n});\n\nexport default ExampleForm;"]},"metadata":{},"sourceType":"module"}